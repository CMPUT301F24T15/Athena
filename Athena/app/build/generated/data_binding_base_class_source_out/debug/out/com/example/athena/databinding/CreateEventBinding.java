// Generated by view binder compiler. Do not edit!
package com.example.athena.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.athena.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CreateEventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView UIBox;

  @NonNull
  public final Button createEventButton;

  @NonNull
  public final EditText description;

  @NonNull
  public final EditText eventDate;

  @NonNull
  public final EditText eventName;

  @NonNull
  public final CheckBox geoRequire;

  @NonNull
  public final EditText participants;

  @NonNull
  public final EditText regDateEnd;

  @NonNull
  public final EditText regDateStart;

  @NonNull
  public final ImageView testView;

  @NonNull
  public final Button uploadPoster;

  private CreateEventBinding(@NonNull ConstraintLayout rootView, @NonNull TextView UIBox,
      @NonNull Button createEventButton, @NonNull EditText description, @NonNull EditText eventDate,
      @NonNull EditText eventName, @NonNull CheckBox geoRequire, @NonNull EditText participants,
      @NonNull EditText regDateEnd, @NonNull EditText regDateStart, @NonNull ImageView testView,
      @NonNull Button uploadPoster) {
    this.rootView = rootView;
    this.UIBox = UIBox;
    this.createEventButton = createEventButton;
    this.description = description;
    this.eventDate = eventDate;
    this.eventName = eventName;
    this.geoRequire = geoRequire;
    this.participants = participants;
    this.regDateEnd = regDateEnd;
    this.regDateStart = regDateStart;
    this.testView = testView;
    this.uploadPoster = uploadPoster;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CreateEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CreateEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.create_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CreateEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.UIBox;
      TextView UIBox = ViewBindings.findChildViewById(rootView, id);
      if (UIBox == null) {
        break missingId;
      }

      id = R.id.createEventButton;
      Button createEventButton = ViewBindings.findChildViewById(rootView, id);
      if (createEventButton == null) {
        break missingId;
      }

      id = R.id.description;
      EditText description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.eventDate;
      EditText eventDate = ViewBindings.findChildViewById(rootView, id);
      if (eventDate == null) {
        break missingId;
      }

      id = R.id.eventName;
      EditText eventName = ViewBindings.findChildViewById(rootView, id);
      if (eventName == null) {
        break missingId;
      }

      id = R.id.geoRequire;
      CheckBox geoRequire = ViewBindings.findChildViewById(rootView, id);
      if (geoRequire == null) {
        break missingId;
      }

      id = R.id.participants;
      EditText participants = ViewBindings.findChildViewById(rootView, id);
      if (participants == null) {
        break missingId;
      }

      id = R.id.regDateEnd;
      EditText regDateEnd = ViewBindings.findChildViewById(rootView, id);
      if (regDateEnd == null) {
        break missingId;
      }

      id = R.id.regDateStart;
      EditText regDateStart = ViewBindings.findChildViewById(rootView, id);
      if (regDateStart == null) {
        break missingId;
      }

      id = R.id.testView;
      ImageView testView = ViewBindings.findChildViewById(rootView, id);
      if (testView == null) {
        break missingId;
      }

      id = R.id.uploadPoster;
      Button uploadPoster = ViewBindings.findChildViewById(rootView, id);
      if (uploadPoster == null) {
        break missingId;
      }

      return new CreateEventBinding((ConstraintLayout) rootView, UIBox, createEventButton,
          description, eventDate, eventName, geoRequire, participants, regDateEnd, regDateStart,
          testView, uploadPoster);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
