// Generated by view binder compiler. Do not edit!
package com.example.athena.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.athena.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProfileScreenAdminBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView ProfileEmail;

  @NonNull
  public final TextView ProfileNumber;

  @NonNull
  public final ConstraintLayout adminProfileDetails;

  @NonNull
  public final Button backBtnProfileAdmin;

  @NonNull
  public final Button deleteBtnProfileAdmin;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final TextView profileName;

  private ProfileScreenAdminBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView ProfileEmail, @NonNull TextView ProfileNumber,
      @NonNull ConstraintLayout adminProfileDetails, @NonNull Button backBtnProfileAdmin,
      @NonNull Button deleteBtnProfileAdmin, @NonNull CircleImageView profileImage,
      @NonNull TextView profileName) {
    this.rootView = rootView;
    this.ProfileEmail = ProfileEmail;
    this.ProfileNumber = ProfileNumber;
    this.adminProfileDetails = adminProfileDetails;
    this.backBtnProfileAdmin = backBtnProfileAdmin;
    this.deleteBtnProfileAdmin = deleteBtnProfileAdmin;
    this.profileImage = profileImage;
    this.profileName = profileName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProfileScreenAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProfileScreenAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.profile_screen_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProfileScreenAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ProfileEmail;
      TextView ProfileEmail = ViewBindings.findChildViewById(rootView, id);
      if (ProfileEmail == null) {
        break missingId;
      }

      id = R.id.ProfileNumber;
      TextView ProfileNumber = ViewBindings.findChildViewById(rootView, id);
      if (ProfileNumber == null) {
        break missingId;
      }

      ConstraintLayout adminProfileDetails = (ConstraintLayout) rootView;

      id = R.id.backBtnProfileAdmin;
      Button backBtnProfileAdmin = ViewBindings.findChildViewById(rootView, id);
      if (backBtnProfileAdmin == null) {
        break missingId;
      }

      id = R.id.deleteBtnProfileAdmin;
      Button deleteBtnProfileAdmin = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtnProfileAdmin == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.profileName;
      TextView profileName = ViewBindings.findChildViewById(rootView, id);
      if (profileName == null) {
        break missingId;
      }

      return new ProfileScreenAdminBinding((ConstraintLayout) rootView, ProfileEmail, ProfileNumber,
          adminProfileDetails, backBtnProfileAdmin, deleteBtnProfileAdmin, profileImage,
          profileName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
