// Generated by view binder compiler. Do not edit!
package com.example.athena.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.athena.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InvitedToEventNotiDisplayBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout NotiLayout;

  @NonNull
  public final TextView NotiRegEndTextview;

  @NonNull
  public final TextView NotiRegStartTextview;

  @NonNull
  public final TextView NotificationTitleNonEdit;

  @NonNull
  public final TextView eventNameNotiTitleNonEdit;

  @NonNull
  public final ImageButton notiAcceptButton;

  @NonNull
  public final ImageButton notiDenyButton;

  @NonNull
  public final TextView notiEventName;

  @NonNull
  public final TextView notiRegEndNonEdit;

  @NonNull
  public final TextView notiRegStartNonEdit;

  private InvitedToEventNotiDisplayBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout NotiLayout, @NonNull TextView NotiRegEndTextview,
      @NonNull TextView NotiRegStartTextview, @NonNull TextView NotificationTitleNonEdit,
      @NonNull TextView eventNameNotiTitleNonEdit, @NonNull ImageButton notiAcceptButton,
      @NonNull ImageButton notiDenyButton, @NonNull TextView notiEventName,
      @NonNull TextView notiRegEndNonEdit, @NonNull TextView notiRegStartNonEdit) {
    this.rootView = rootView;
    this.NotiLayout = NotiLayout;
    this.NotiRegEndTextview = NotiRegEndTextview;
    this.NotiRegStartTextview = NotiRegStartTextview;
    this.NotificationTitleNonEdit = NotificationTitleNonEdit;
    this.eventNameNotiTitleNonEdit = eventNameNotiTitleNonEdit;
    this.notiAcceptButton = notiAcceptButton;
    this.notiDenyButton = notiDenyButton;
    this.notiEventName = notiEventName;
    this.notiRegEndNonEdit = notiRegEndNonEdit;
    this.notiRegStartNonEdit = notiRegStartNonEdit;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InvitedToEventNotiDisplayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InvitedToEventNotiDisplayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.invited_to_event_noti_display, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InvitedToEventNotiDisplayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout NotiLayout = (LinearLayout) rootView;

      id = R.id.Noti_reg_end_textview;
      TextView NotiRegEndTextview = ViewBindings.findChildViewById(rootView, id);
      if (NotiRegEndTextview == null) {
        break missingId;
      }

      id = R.id.Noti_reg_start_textview;
      TextView NotiRegStartTextview = ViewBindings.findChildViewById(rootView, id);
      if (NotiRegStartTextview == null) {
        break missingId;
      }

      id = R.id.Notification_title_non_edit;
      TextView NotificationTitleNonEdit = ViewBindings.findChildViewById(rootView, id);
      if (NotificationTitleNonEdit == null) {
        break missingId;
      }

      id = R.id.eventNameNotiTitleNonEdit;
      TextView eventNameNotiTitleNonEdit = ViewBindings.findChildViewById(rootView, id);
      if (eventNameNotiTitleNonEdit == null) {
        break missingId;
      }

      id = R.id.noti_accept_button;
      ImageButton notiAcceptButton = ViewBindings.findChildViewById(rootView, id);
      if (notiAcceptButton == null) {
        break missingId;
      }

      id = R.id.noti_deny_button;
      ImageButton notiDenyButton = ViewBindings.findChildViewById(rootView, id);
      if (notiDenyButton == null) {
        break missingId;
      }

      id = R.id.notiEventName;
      TextView notiEventName = ViewBindings.findChildViewById(rootView, id);
      if (notiEventName == null) {
        break missingId;
      }

      id = R.id.noti_reg_end_non_edit;
      TextView notiRegEndNonEdit = ViewBindings.findChildViewById(rootView, id);
      if (notiRegEndNonEdit == null) {
        break missingId;
      }

      id = R.id.noti_reg_start_non_edit;
      TextView notiRegStartNonEdit = ViewBindings.findChildViewById(rootView, id);
      if (notiRegStartNonEdit == null) {
        break missingId;
      }

      return new InvitedToEventNotiDisplayBinding((LinearLayout) rootView, NotiLayout,
          NotiRegEndTextview, NotiRegStartTextview, NotificationTitleNonEdit,
          eventNameNotiTitleNonEdit, notiAcceptButton, notiDenyButton, notiEventName,
          notiRegEndNonEdit, notiRegStartNonEdit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
