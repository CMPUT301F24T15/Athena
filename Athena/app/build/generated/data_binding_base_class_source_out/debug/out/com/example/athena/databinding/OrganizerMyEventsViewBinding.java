// Generated by view binder compiler. Do not edit!
package com.example.athena.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.athena.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrganizerMyEventsViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ListView organizerEventListview;

  @NonNull
  public final TextView organizerEventsTitleNonEdit;

  @NonNull
  public final ConstraintLayout organizerEventsView;

  private OrganizerMyEventsViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ListView organizerEventListview, @NonNull TextView organizerEventsTitleNonEdit,
      @NonNull ConstraintLayout organizerEventsView) {
    this.rootView = rootView;
    this.organizerEventListview = organizerEventListview;
    this.organizerEventsTitleNonEdit = organizerEventsTitleNonEdit;
    this.organizerEventsView = organizerEventsView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrganizerMyEventsViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrganizerMyEventsViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.organizer_my_events_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrganizerMyEventsViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.organizer_event_listview;
      ListView organizerEventListview = ViewBindings.findChildViewById(rootView, id);
      if (organizerEventListview == null) {
        break missingId;
      }

      id = R.id.organizer_events_title_non_edit;
      TextView organizerEventsTitleNonEdit = ViewBindings.findChildViewById(rootView, id);
      if (organizerEventsTitleNonEdit == null) {
        break missingId;
      }

      ConstraintLayout organizerEventsView = (ConstraintLayout) rootView;

      return new OrganizerMyEventsViewBinding((ConstraintLayout) rootView, organizerEventListview,
          organizerEventsTitleNonEdit, organizerEventsView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
