// Generated by view binder compiler. Do not edit!
package com.example.athena.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.athena.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FacilityDetailsAdminBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backFromFacilityDetails;

  @NonNull
  public final Button deleteFacilityButton;

  @NonNull
  public final TextView facilityLocationTextViewAdmin;

  @NonNull
  public final TextView facilityNameTextviewAdmin;

  @NonNull
  public final ConstraintLayout facilitydetailsview;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView9;

  private FacilityDetailsAdminBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button backFromFacilityDetails, @NonNull Button deleteFacilityButton,
      @NonNull TextView facilityLocationTextViewAdmin, @NonNull TextView facilityNameTextviewAdmin,
      @NonNull ConstraintLayout facilitydetailsview, @NonNull TextView textView10,
      @NonNull TextView textView9) {
    this.rootView = rootView;
    this.backFromFacilityDetails = backFromFacilityDetails;
    this.deleteFacilityButton = deleteFacilityButton;
    this.facilityLocationTextViewAdmin = facilityLocationTextViewAdmin;
    this.facilityNameTextviewAdmin = facilityNameTextviewAdmin;
    this.facilitydetailsview = facilitydetailsview;
    this.textView10 = textView10;
    this.textView9 = textView9;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FacilityDetailsAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FacilityDetailsAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.facility_details_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FacilityDetailsAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_from_facility_details;
      Button backFromFacilityDetails = ViewBindings.findChildViewById(rootView, id);
      if (backFromFacilityDetails == null) {
        break missingId;
      }

      id = R.id.delete_facility_button;
      Button deleteFacilityButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteFacilityButton == null) {
        break missingId;
      }

      id = R.id.facility_location_textView_admin;
      TextView facilityLocationTextViewAdmin = ViewBindings.findChildViewById(rootView, id);
      if (facilityLocationTextViewAdmin == null) {
        break missingId;
      }

      id = R.id.facility_name_textview_admin;
      TextView facilityNameTextviewAdmin = ViewBindings.findChildViewById(rootView, id);
      if (facilityNameTextviewAdmin == null) {
        break missingId;
      }

      ConstraintLayout facilitydetailsview = (ConstraintLayout) rootView;

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      return new FacilityDetailsAdminBinding((ConstraintLayout) rootView, backFromFacilityDetails,
          deleteFacilityButton, facilityLocationTextViewAdmin, facilityNameTextviewAdmin,
          facilitydetailsview, textView10, textView9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
