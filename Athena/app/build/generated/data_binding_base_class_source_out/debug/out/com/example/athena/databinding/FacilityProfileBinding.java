// Generated by view binder compiler. Do not edit!
package com.example.athena.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.athena.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FacilityProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView editFacLocTitle;

  @NonNull
  public final ImageButton editFacilityLocationButton;

  @NonNull
  public final ImageButton editFacilityNameButton;

  @NonNull
  public final TextView editFacilityNameTitle;

  @NonNull
  public final TextView facilityDetailsTitleNonEdit;

  @NonNull
  public final TextView facilityLocationTextView;

  @NonNull
  public final TextView facilityNameTextview;

  @NonNull
  public final ConstraintLayout facilitydetailsview;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView9;

  private FacilityProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView editFacLocTitle, @NonNull ImageButton editFacilityLocationButton,
      @NonNull ImageButton editFacilityNameButton, @NonNull TextView editFacilityNameTitle,
      @NonNull TextView facilityDetailsTitleNonEdit, @NonNull TextView facilityLocationTextView,
      @NonNull TextView facilityNameTextview, @NonNull ConstraintLayout facilitydetailsview,
      @NonNull TextView textView10, @NonNull TextView textView9) {
    this.rootView = rootView;
    this.editFacLocTitle = editFacLocTitle;
    this.editFacilityLocationButton = editFacilityLocationButton;
    this.editFacilityNameButton = editFacilityNameButton;
    this.editFacilityNameTitle = editFacilityNameTitle;
    this.facilityDetailsTitleNonEdit = facilityDetailsTitleNonEdit;
    this.facilityLocationTextView = facilityLocationTextView;
    this.facilityNameTextview = facilityNameTextview;
    this.facilitydetailsview = facilitydetailsview;
    this.textView10 = textView10;
    this.textView9 = textView9;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FacilityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FacilityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.facility_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FacilityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_fac_loc_title;
      TextView editFacLocTitle = ViewBindings.findChildViewById(rootView, id);
      if (editFacLocTitle == null) {
        break missingId;
      }

      id = R.id.edit_facility_location_button;
      ImageButton editFacilityLocationButton = ViewBindings.findChildViewById(rootView, id);
      if (editFacilityLocationButton == null) {
        break missingId;
      }

      id = R.id.edit_facility_name_button;
      ImageButton editFacilityNameButton = ViewBindings.findChildViewById(rootView, id);
      if (editFacilityNameButton == null) {
        break missingId;
      }

      id = R.id.edit_facility_name_title;
      TextView editFacilityNameTitle = ViewBindings.findChildViewById(rootView, id);
      if (editFacilityNameTitle == null) {
        break missingId;
      }

      id = R.id.facility_details_title_non_edit;
      TextView facilityDetailsTitleNonEdit = ViewBindings.findChildViewById(rootView, id);
      if (facilityDetailsTitleNonEdit == null) {
        break missingId;
      }

      id = R.id.facility_location_textView;
      TextView facilityLocationTextView = ViewBindings.findChildViewById(rootView, id);
      if (facilityLocationTextView == null) {
        break missingId;
      }

      id = R.id.facility_name_textview;
      TextView facilityNameTextview = ViewBindings.findChildViewById(rootView, id);
      if (facilityNameTextview == null) {
        break missingId;
      }

      ConstraintLayout facilitydetailsview = (ConstraintLayout) rootView;

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      return new FacilityProfileBinding((ConstraintLayout) rootView, editFacLocTitle,
          editFacilityLocationButton, editFacilityNameButton, editFacilityNameTitle,
          facilityDetailsTitleNonEdit, facilityLocationTextView, facilityNameTextview,
          facilitydetailsview, textView10, textView9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
