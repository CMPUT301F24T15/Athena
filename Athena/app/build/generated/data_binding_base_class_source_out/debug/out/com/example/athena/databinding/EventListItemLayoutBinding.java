// Generated by view binder compiler. Do not edit!
package com.example.athena.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.athena.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EventListItemLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout EventTitleLayout;

  @NonNull
  public final TextView RegStartEventNonEdit;

  @NonNull
  public final LinearLayout eventCardLayout;

  @NonNull
  public final TextView eventDescNonEdit;

  @NonNull
  public final LinearLayout eventDescriptionLayout;

  @NonNull
  public final TextView eventDescriptionTextview;

  @NonNull
  public final TextView eventNameNonEdit;

  @NonNull
  public final ImageView eventPoster;

  @NonNull
  public final TextView eventTitleTextview;

  @NonNull
  public final TextView regDeadlineTextView;

  @NonNull
  public final TextView regEndEventNonEdit;

  @NonNull
  public final TextView regStartTextView;

  @NonNull
  public final LinearLayout regisration;

  @NonNull
  public final ConstraintLayout registrationStartDateTextview;

  @NonNull
  public final LinearLayout registrationStartLayout;

  private EventListItemLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout EventTitleLayout, @NonNull TextView RegStartEventNonEdit,
      @NonNull LinearLayout eventCardLayout, @NonNull TextView eventDescNonEdit,
      @NonNull LinearLayout eventDescriptionLayout, @NonNull TextView eventDescriptionTextview,
      @NonNull TextView eventNameNonEdit, @NonNull ImageView eventPoster,
      @NonNull TextView eventTitleTextview, @NonNull TextView regDeadlineTextView,
      @NonNull TextView regEndEventNonEdit, @NonNull TextView regStartTextView,
      @NonNull LinearLayout regisration, @NonNull ConstraintLayout registrationStartDateTextview,
      @NonNull LinearLayout registrationStartLayout) {
    this.rootView = rootView;
    this.EventTitleLayout = EventTitleLayout;
    this.RegStartEventNonEdit = RegStartEventNonEdit;
    this.eventCardLayout = eventCardLayout;
    this.eventDescNonEdit = eventDescNonEdit;
    this.eventDescriptionLayout = eventDescriptionLayout;
    this.eventDescriptionTextview = eventDescriptionTextview;
    this.eventNameNonEdit = eventNameNonEdit;
    this.eventPoster = eventPoster;
    this.eventTitleTextview = eventTitleTextview;
    this.regDeadlineTextView = regDeadlineTextView;
    this.regEndEventNonEdit = regEndEventNonEdit;
    this.regStartTextView = regStartTextView;
    this.regisration = regisration;
    this.registrationStartDateTextview = registrationStartDateTextview;
    this.registrationStartLayout = registrationStartLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EventListItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EventListItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.event_list_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EventListItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Event_title_layout;
      LinearLayout EventTitleLayout = ViewBindings.findChildViewById(rootView, id);
      if (EventTitleLayout == null) {
        break missingId;
      }

      id = R.id.Reg_start_event_non_edit;
      TextView RegStartEventNonEdit = ViewBindings.findChildViewById(rootView, id);
      if (RegStartEventNonEdit == null) {
        break missingId;
      }

      id = R.id.event_card_layout;
      LinearLayout eventCardLayout = ViewBindings.findChildViewById(rootView, id);
      if (eventCardLayout == null) {
        break missingId;
      }

      id = R.id.event_desc_non_edit;
      TextView eventDescNonEdit = ViewBindings.findChildViewById(rootView, id);
      if (eventDescNonEdit == null) {
        break missingId;
      }

      id = R.id.event_description_layout;
      LinearLayout eventDescriptionLayout = ViewBindings.findChildViewById(rootView, id);
      if (eventDescriptionLayout == null) {
        break missingId;
      }

      id = R.id.event_description_textview;
      TextView eventDescriptionTextview = ViewBindings.findChildViewById(rootView, id);
      if (eventDescriptionTextview == null) {
        break missingId;
      }

      id = R.id.event_name_non_edit;
      TextView eventNameNonEdit = ViewBindings.findChildViewById(rootView, id);
      if (eventNameNonEdit == null) {
        break missingId;
      }

      id = R.id.event_poster;
      ImageView eventPoster = ViewBindings.findChildViewById(rootView, id);
      if (eventPoster == null) {
        break missingId;
      }

      id = R.id.event_title_textview;
      TextView eventTitleTextview = ViewBindings.findChildViewById(rootView, id);
      if (eventTitleTextview == null) {
        break missingId;
      }

      id = R.id.reg_deadline_text_view;
      TextView regDeadlineTextView = ViewBindings.findChildViewById(rootView, id);
      if (regDeadlineTextView == null) {
        break missingId;
      }

      id = R.id.reg_end_event_non_edit;
      TextView regEndEventNonEdit = ViewBindings.findChildViewById(rootView, id);
      if (regEndEventNonEdit == null) {
        break missingId;
      }

      id = R.id.reg_start_text_view;
      TextView regStartTextView = ViewBindings.findChildViewById(rootView, id);
      if (regStartTextView == null) {
        break missingId;
      }

      id = R.id.regisration;
      LinearLayout regisration = ViewBindings.findChildViewById(rootView, id);
      if (regisration == null) {
        break missingId;
      }

      ConstraintLayout registrationStartDateTextview = (ConstraintLayout) rootView;

      id = R.id.registration_start_layout;
      LinearLayout registrationStartLayout = ViewBindings.findChildViewById(rootView, id);
      if (registrationStartLayout == null) {
        break missingId;
      }

      return new EventListItemLayoutBinding((ConstraintLayout) rootView, EventTitleLayout,
          RegStartEventNonEdit, eventCardLayout, eventDescNonEdit, eventDescriptionLayout,
          eventDescriptionTextview, eventNameNonEdit, eventPoster, eventTitleTextview,
          regDeadlineTextView, regEndEventNonEdit, regStartTextView, regisration,
          registrationStartDateTextview, registrationStartLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
